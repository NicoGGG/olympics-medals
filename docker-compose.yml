services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - '9092:9092'
      - '29092:29092'
      - '9999:9999'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    depends_on:
      - zoo1

  scaner:
    build: .
    depends_on:
      - kafka1
    environment:
      KAFKA_URL: kafka1:19092
      SCAN_INTERVAL_MS: 300000

  consumer:
    build: .
    depends_on:
      - kafka1
      - mongo
    command: 'consumer.js'
    environment:
      KAFKA_URL: kafka1:19092
      MONGO_URI: mongodb://mongo:27017

  notification:
    build: .
    depends_on:
      - kafka1
    command: 'notification.js'
    environment:
      KAFKA_URL: kafka1:19092

  kafka-init:
    image: apache/kafka:3.7.1
    depends_on:
      - kafka1
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      # blocks until kafka is reachable
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka1:19092 --list

      echo -e 'Creating kafka topics'
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka1:19092 --create --if-not-exists --topic olympics --replication-factor 1 --partitions 1
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka1:19092 --create --if-not-exists --topic olympics-updates --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka1:19092 --list
      "

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
      ME_CONFIG_BASICAUTH: false
